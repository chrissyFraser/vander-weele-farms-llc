stages:
  - test # runs tests first
  - build # run build after tests
  - deploy


monolith-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd monolith_service
    - pip install -r requirements.txt
    - python -m pytest 


account-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd accounts_service/test
    - pip install -r requirements.txt
    - python -m pytest 

vander-weele-lint-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 monolith_service accounts_service


## BUILD
build-Vander-Weele-Front-end:
  stage: build
  image: node:lts-bullseye
  variables:
    # PUBLIC_URL: https://dgb-galv.gitlab.io/apis-with-sql
    PUBLIC_URL: https://vander-weele-farms-llc.gitlab.io/vander-weele-farms-llc
    REACT_APP_API_HOST: https://vanderweele-farm-users.herokuapp.com
    REACT_APP_API_HOST_MONOLITH: https://vanderweele-farms-llc.herokuapp.com
    # REACT_APP_API_HOST_ACCOUNTS: https://vanderweele-farm-users.herokuapp.com
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

build-Vander-Weele-api-Image:  # Build fastapi image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd monolith_service
    - docker build -t ${CI_REGISTRY_IMAGE}/monolith_api:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/monolith_api:latest ${CI_REGISTRY_IMAGE}/monolith_api:$CI_JOB_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/monolith_api:$CI_JOB_ID
    - docker push ${CI_REGISTRY_IMAGE}/monolith_api:latest

deploy-Vander-Weele-api-Image:  # Deploy fastapi image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-Vander-Weele-api-Image
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull ${CI_REGISTRY_IMAGE}/monolith_api:latest
    - docker tag ${CI_REGISTRY_IMAGE}/monolith_api:latest registry.heroku.com/$HEROKU_FASTAPI_APP/web:latest
    - docker push registry.heroku.com/$HEROKU_FASTAPI_APP/web:latest

release-Vander-Weele-api-Image:  # deploy fastapi image
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-Vander-Weele-api-Image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release web --app $HEROKU_FASTAPI_APP



## DEPLOY THE UI
pages:  # THIS STEP MUST BE NAME PAGES
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-Vander-Weele-Front-end
  needs:
    - build-Vander-Weele-Front-end
  script:
    # THE FIRST PART OF THIS COMMAND MUST BE THE DIRECTORY
    # THAT YOU cd INTO TO BUILD IT PLUS THE build/ AT THE
    # END
    # - cd ghi/src/components/index.js/build
    # - cd ghi/src/app.js
    - mv ghi/build/ public
  artifacts:
    paths:
      - public


build-Vander-Weele-user-api-Image:  # Build fastapi image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd accounts_service
    - docker build -t ${CI_REGISTRY_IMAGE}/accounts_api:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/accounts_api:latest ${CI_REGISTRY_IMAGE}/accounts_api:$CI_JOB_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/accounts_api:$CI_JOB_ID
    - docker push ${CI_REGISTRY_IMAGE}/accounts_api:latest

    

deploy-Vander-Weele-user-api-Image:  # Deploy fastapi image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-Vander-Weele-user-api-Image
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull ${CI_REGISTRY_IMAGE}/accounts_api:latest
    - docker tag ${CI_REGISTRY_IMAGE}/accounts_api:latest registry.heroku.com/$HEROKU_FASTAPI_ACCOUNTS_APP/web:latest
    - docker push registry.heroku.com/$HEROKU_FASTAPI_ACCOUNTS_APP/web:latest

release-Vander-Weele-user-api-Image:  # deploy fastapi image
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-Vander-Weele-user-api-Image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release web --app $HEROKU_FASTAPI_ACCOUNTS_APP










